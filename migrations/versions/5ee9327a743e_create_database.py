"""Create database

Revision ID: 5ee9327a743e
Revises: 
Create Date: 2023-10-25 12:36:51.400146

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5ee9327a743e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('django_session_expire_date_a5c62663', table_name='django_session')
    # op.drop_index('django_session_session_key_c0390e0f_like', table_name='django_session')
    # op.drop_table('django_session')
    # op.drop_index('auth_user_user_permissions_permission_id_1fbb5f2c', table_name='auth_user_user_permissions')
    # op.drop_index('auth_user_user_permissions_user_id_a95ead1b', table_name='auth_user_user_permissions')
    # op.drop_table('auth_user_user_permissions')
    # op.drop_index('auth_permission_content_type_id_2f476e4b', table_name='auth_permission')
    # op.drop_table('auth_permission')
    # op.drop_index('django_admin_log_content_type_id_c4bce8eb', table_name='django_admin_log')
    # op.drop_index('django_admin_log_user_id_c564eba6', table_name='django_admin_log')
    # op.drop_table('django_admin_log')
    # op.drop_index('card_questions_type_id_c053d3ee', table_name='card_questions')
    # op.drop_table('card_questions')
    # op.drop_table('django_content_type')
    # op.drop_index('auth_user_username_6821ab7c_like', table_name='auth_user')
    # op.drop_table('auth_user')
    # op.drop_table('users')
    # op.drop_table('phone_number')
    # op.drop_table('card_users')
    # op.drop_index('card_questions_to_repeat_quest_id_id_09b0f500', table_name='card_questions_to_repeat')
    # op.drop_index('card_questions_to_repeat_user_id_id_f889dd9a', table_name='card_questions_to_repeat')
    # op.drop_table('card_questions_to_repeat')
    # op.drop_table('django_migrations')
    # op.drop_index('auth_group_permissions_group_id_b120cbf9', table_name='auth_group_permissions')
    # op.drop_index('auth_group_permissions_permission_id_84c5c92e', table_name='auth_group_permissions')
    # op.drop_table('auth_group_permissions')
    # op.drop_index('auth_user_groups_group_id_97559544', table_name='auth_user_groups')
    # op.drop_index('auth_user_groups_user_id_6a12ed8b', table_name='auth_user_groups')
    # op.drop_table('auth_user_groups')
    # op.drop_table('card_question_type')
    # op.drop_index('auth_group_name_a6ea08ec_like', table_name='auth_group')
    # op.drop_table('auth_group')
    op.alter_column('startapp', 'name_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('startapp_name_id_fkey', 'startapp', type_='foreignkey')
    op.create_foreign_key(None, 'startapp', 'apponcomputer', ['name_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'startapp', type_='foreignkey')
    op.create_foreign_key('startapp_name_id_fkey', 'startapp', 'apponcomputer', ['name_id'], ['id'])
    op.alter_column('startapp', 'name_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # op.create_table('auth_group',
    # sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='auth_group_pkey'),
    # sa.UniqueConstraint('name', name='auth_group_name_key'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_index('auth_group_name_a6ea08ec_like', 'auth_group', ['name'], unique=False)
    # op.create_table('card_question_type',
    # sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('type', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='card_question_type_pkey'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_table('auth_user_groups',
    # sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_user_groups_group_id_97559544_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    # sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='auth_user_groups_user_id_6a12ed8b_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    # sa.PrimaryKeyConstraint('id', name='auth_user_groups_pkey'),
    # sa.UniqueConstraint('user_id', 'group_id', name='auth_user_groups_user_id_group_id_94350c0c_uniq')
    # )
    # op.create_index('auth_user_groups_user_id_6a12ed8b', 'auth_user_groups', ['user_id'], unique=False)
    # op.create_index('auth_user_groups_group_id_97559544', 'auth_user_groups', ['group_id'], unique=False)
    # op.create_table('auth_group_permissions',
    # sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_group_permissions_group_id_b120cbf9_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    # sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_group_permissio_permission_id_84c5c92e_fk_auth_perm', initially='DEFERRED', deferrable=True),
    # sa.PrimaryKeyConstraint('id', name='auth_group_permissions_pkey'),
    # sa.UniqueConstraint('group_id', 'permission_id', name='auth_group_permissions_group_id_permission_id_0cd325b0_uniq')
    # )
    # op.create_index('auth_group_permissions_permission_id_84c5c92e', 'auth_group_permissions', ['permission_id'], unique=False)
    # op.create_index('auth_group_permissions_group_id_b120cbf9', 'auth_group_permissions', ['group_id'], unique=False)
    # op.create_table('django_migrations',
    # sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='django_migrations_pkey')
    # )
    # op.create_table('card_questions_to_repeat',
    # sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('answer', sa.BOOLEAN(), autoincrement=False, nullable=False),
    # sa.Column('box', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    # sa.Column('quest_id_id', sa.BIGINT(), autoincrement=False, nullable=False),
    # sa.Column('user_id_id', sa.BIGINT(), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['quest_id_id'], ['card_questions.id'], name='card_questions_to_re_quest_id_id_09b0f500_fk_card_ques', initially='DEFERRED', deferrable=True),
    # sa.ForeignKeyConstraint(['user_id_id'], ['card_users.id'], name='card_questions_to_repeat_user_id_id_f889dd9a_fk_card_users_id', initially='DEFERRED', deferrable=True),
    # sa.PrimaryKeyConstraint('id', name='card_questions_to_repeat_pkey')
    # )
    # op.create_index('card_questions_to_repeat_user_id_id_f889dd9a', 'card_questions_to_repeat', ['user_id_id'], unique=False)
    # op.create_index('card_questions_to_repeat_quest_id_id_09b0f500', 'card_questions_to_repeat', ['quest_id_id'], unique=False)
    # op.create_table('card_users',
    # sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('login', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    # sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    # sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    # sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    # sa.Column('email', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    # sa.Column('code', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='card_users_pkey')
    # )
    # op.create_table('phone_number',
    # sa.Column('name', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    # sa.Column('phone', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    # sa.Column('birth_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='phone_number_user_id_fkey')
    # )
    # op.create_table('users',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('login', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    # sa.Column('password', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    # sa.Column('name', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    # sa.Column('birth_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('email', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='users_pkey')
    # )
    # op.create_table('auth_user',
    # sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    # sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    # sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    # sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    # sa.Column('first_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    # sa.Column('last_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    # sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    # sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
    # sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    # sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='auth_user_pkey'),
    # sa.UniqueConstraint('username', name='auth_user_username_key'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_index('auth_user_username_6821ab7c_like', 'auth_user', ['username'], unique=False)
    # op.create_table('django_content_type',
    # sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('app_label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    # sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='django_content_type_pkey'),
    # sa.UniqueConstraint('app_label', 'model', name='django_content_type_app_label_model_76bd3d3b_uniq'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_table('card_questions',
    # sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('foreign_lang', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    # sa.Column('translation_lang', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    # sa.Column('foreign_text', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    # sa.Column('translation_text', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    # sa.Column('type_id', sa.BIGINT(), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['type_id'], ['card_question_type.id'], name='card_questions_type_id_c053d3ee_fk_card_question_type_id', initially='DEFERRED', deferrable=True),
    # sa.PrimaryKeyConstraint('id', name='card_questions_pkey')
    # )
    # op.create_index('card_questions_type_id_c053d3ee', 'card_questions', ['type_id'], unique=False)
    # op.create_table('django_admin_log',
    # sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('action_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    # sa.Column('object_id', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.Column('object_repr', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    # sa.Column('action_flag', sa.SMALLINT(), autoincrement=False, nullable=False),
    # sa.Column('change_message', sa.TEXT(), autoincrement=False, nullable=False),
    # sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.CheckConstraint('action_flag >= 0', name='django_admin_log_action_flag_check'),
    # sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='django_admin_log_content_type_id_c4bce8eb_fk_django_co', initially='DEFERRED', deferrable=True),
    # sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='django_admin_log_user_id_c564eba6_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    # sa.PrimaryKeyConstraint('id', name='django_admin_log_pkey')
    # )
    # op.create_index('django_admin_log_user_id_c564eba6', 'django_admin_log', ['user_id'], unique=False)
    # op.create_index('django_admin_log_content_type_id_c4bce8eb', 'django_admin_log', ['content_type_id'], unique=False)
    # op.create_table('auth_permission',
    # sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('codename', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='auth_permission_content_type_id_2f476e4b_fk_django_co', initially='DEFERRED', deferrable=True),
    # sa.PrimaryKeyConstraint('id', name='auth_permission_pkey'),
    # sa.UniqueConstraint('content_type_id', 'codename', name='auth_permission_content_type_id_codename_01ab375a_uniq'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_index('auth_permission_content_type_id_2f476e4b', 'auth_permission', ['content_type_id'], unique=False)
    # op.create_table('auth_user_user_permissions',
    # sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    # sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm', initially='DEFERRED', deferrable=True),
    # sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    # sa.PrimaryKeyConstraint('id', name='auth_user_user_permissions_pkey'),
    # sa.UniqueConstraint('user_id', 'permission_id', name='auth_user_user_permissions_user_id_permission_id_14a6b632_uniq')
    # )
    # op.create_index('auth_user_user_permissions_user_id_a95ead1b', 'auth_user_user_permissions', ['user_id'], unique=False)
    # op.create_index('auth_user_user_permissions_permission_id_1fbb5f2c', 'auth_user_user_permissions', ['permission_id'], unique=False)
    # op.create_table('django_session',
    # sa.Column('session_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    # sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=False),
    # sa.Column('expire_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('session_key', name='django_session_pkey')
    # )
    # op.create_index('django_session_session_key_c0390e0f_like', 'django_session', ['session_key'], unique=False)
    # op.create_index('django_session_expire_date_a5c62663', 'django_session', ['expire_date'], unique=False)
    # ### end Alembic commands ###
